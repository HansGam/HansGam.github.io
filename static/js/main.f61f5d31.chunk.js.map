{"version":3,"sources":["NavBar/NavBar.tsx","About/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","toolbar","mixins","drawerPaper","background","content","flexGrow","padding","spacing","button","fontFamily","fontWeight","NavBar","classes","useTheme","useState","isMobile","setMobile","handleDrawerToggle","className","IconButton","onClick","style","color","Divider","List","map","text","index","ListItem","component","Link","to","toLowerCase","Grid","container","direction","alignItems","item","xs","label","fontSize","renderIcon","ListItemText","disableTypography","primary","AppBar","Toolbar","justify","Slide","timeout","in","href","Hidden","lgUp","Drawer","variant","anchor","open","onClose","paper","ModalProps","keepMounted","elevation","mdDown","Button","endIcon","createMuiTheme","typography","h3","body1","down","About","props","ThemeProvider","Fade","transitionDelay","Typography","gutterBottom","align","paragraph","border","borderColor","App","path","window","location","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f61f5d31.chunk.js","sourcesContent":["import {\r\n    AppBar,\r\n    Button,\r\n    Drawer,\r\n    Grid,\r\n    Hidden,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Slide\r\n} from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './NavBar.scss';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport PortraitOutlinedIcon from '@material-ui/icons/PortraitOutlined';\r\nimport {Link as MaterialLink} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        background: '#4EB1BA',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    button: {\r\n        fontFamily: 'Comic Sans',\r\n        fontWeight: 'bold',\r\n    }\r\n}));\r\n\r\nexport default function NavBar() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [isMobile, setMobile] = useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobile(!isMobile);\r\n    }\r\n    const renderIcon = (label: String) => {\r\n        switch (label) {\r\n            case 'LinkedIn':\r\n                return <LinkedInIcon fontSize='large' color='primary'/>;\r\n            case 'Projects':\r\n                return <GitHubIcon fontSize='large' color='action'/>;\r\n            case 'Contact':\r\n                return <MailOutlineIcon fontSize='large' color='disabled'/>;\r\n            case 'Resume':\r\n                return <PortraitOutlinedIcon fontSize='large' color='inherit'/>;\r\n        }\r\n    }\r\n    const drawer = (\r\n        <div className=\"drawer\">\r\n            <IconButton\r\n                onClick={handleDrawerToggle}\r\n                style={{color: '#E9E9E9'}}\r\n            >\r\n                <ChevronRightIcon/>\r\n            </IconButton>\r\n            <Divider/>\r\n            <List>\r\n                {['LinkedIn', 'Projects', 'Resume', 'Contact'].map((text, index) => (\r\n                    <ListItem component={Link} to={'/' + text.toLowerCase()}>\r\n                        <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\r\n                            <Grid item xs={3}>\r\n                                {renderIcon(text)}\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ListItemText disableTypography primary={text} style={{fontFamily: \"Trebuchet MS\", color: '#E9E9E9'}}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    )\r\n\r\n\r\n    return (\r\n        <AppBar style={{background: '#4EB1BA'}}>\r\n            <Toolbar>\r\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Slide direction=\"down\" timeout={1000} in={true}>\r\n                            <h2 className=\"h2-blinker\">\r\n                                <MaterialLink color=\"inherit\" href=\"https://HansGam.github.io/\"\r\n                                              className=\"appbar-homelink\">\r\n                                    Hans\r\n                                </MaterialLink>\r\n                                &nbsp;>\r\n                                <span className=\"span-blinker\">_</span>\r\n                            </h2>\r\n                        </Slide>\r\n                    </Grid>\r\n                    <Hidden lgUp>\r\n                        <Slide direction=\"down\" timeout={1200} in={true}>\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={handleDrawerToggle}\r\n                                    style={{color: '#E9E9E9'}}\r\n                                >\r\n                                    <MenuIcon/>\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Slide>\r\n                        <Drawer\r\n                            variant=\"temporary\"\r\n                            anchor='right'\r\n                            open={isMobile}\r\n                            onClose={handleDrawerToggle}\r\n                            color=\"inherit\"\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            ModalProps={{\r\n                                keepMounted: true,\r\n                            }}\r\n                            elevation={2}\r\n                        >\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n                    <Hidden mdDown>\r\n                        <Slide direction=\"down\" timeout={1200} in={true}>\r\n                                <Button className='navbar-button' component='a'\r\n                                        href=\"https://www.linkedin.com/in/hans-gamboa-073808155/\" color=\"inherit\"\r\n                                        style={{fontFamily: 'Trebuchet MS', color: '#E9E9E9', fontWeight: 'bold'}}> LinkedIn </Button>\r\n                        </Slide>\r\n                        <Slide direction=\"down\" timeout={1350} in={true}>\r\n                                <Button className='navbar-button' component='a' href=\"https://github.com/HansGam\"\r\n                                        color=\"inherit\"\r\n                                        style={{fontFamily: 'Trebuchet MS', color: '#E9E9E9', fontWeight: 'bold'}}> Projects </Button>\r\n                        </Slide>\r\n                        <Slide direction=\"down\" timeout={1500} in={true}>\r\n                                <Button className='navbar-button' component='a' href=\"mailto:hdgamboa@gmail.com\"\r\n                                        color=\"inherit\"\r\n                                        style={{fontFamily: 'Arial !important', color: '#E9E9E9', fontWeight: 'bold'}}> Contact </Button>\r\n                        </Slide>\r\n                        <Grid item xs={4}/>\r\n                        <Slide direction=\"down\" timeout={1650} in={true}>\r\n                                <Button endIcon className='navbar-button' component={Link} to=\"/resume\" color=\"inherit\"\r\n                                        style={{fontFamily: 'Trebuchet MS', color: '#E9E9E9', fontWeight: 'bold'}}\r\n                                        variant=\"outlined\"> Résumé </Button>\r\n                        </Slide>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport './About.scss';\r\nimport {Fade, Typography, Button} from \"@material-ui/core\";\r\nimport {Link as MaterialLink} from \"@material-ui/core\";\r\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n    fontSize: '26px',\r\n    [theme.breakpoints.up('md')]: {\r\n        fontSize: '50px',\r\n    },\r\n};\r\n\r\ntheme.typography.body1 = {\r\n    [theme.breakpoints.up('md')]: {\r\n        fontSize: '16px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n    fontSize: '14px',\r\n    }\r\n};\r\n\r\nconst About: React.FC = (props) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Fade in={true} timeout={1400} style={{transitionDelay: '1300ms'}}>\r\n                <div className=\"about-container\">\r\n                        <Typography variant=\"h3\" color=\"inherit\" gutterBottom>Hi, my name is Hans Gamboa.</Typography>\r\n                        <Typography align=\"left\" color=\"inherit\" paragraph>I am a Software Engineer based in Los\r\n                            Angeles, CA.\r\n                            I graduated from the <MaterialLink color=\"inherit\" href=\"https://ucsd.edu/\">University of\r\n                                California, San Diego</MaterialLink> with a\r\n                            Bachelors in Computer Science.\r\n                            My skills are focused in web development using React, TypeScript, and Java Spring Boot.\r\n                        </Typography>\r\n                        <Typography align=\"left\" color=\"inherit\" paragraph>\r\n                            Want to know more?\r\n                        </Typography>\r\n                        <Button className=\"about-button\" component='a' href=\"mailto:hdgamboa@gmail.com\"\r\n                                style={{border: 'solid', borderColor: '#4EB1BA', color: '#E9E9E9'}}> Send Me a\r\n                            Message </Button>\r\n                </div>\r\n            </Fade>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport About from \"./About/About\";\r\n\r\nfunction App() {\r\n    return (\r\n\r\n        <Router>\r\n            <Switch>\r\n                    <div className=\"App\">\r\n                        <NavBar/>\r\n                        <About/>\r\n                        <Route path='/linkedin' component={() => {\r\n                            window.location.href = 'https://www.linkedin.com/in/hans-gamboa-073808155/';\r\n                            return null;\r\n                        }}/>\r\n                        <Route path='/projects' component={() => {\r\n                            window.location.href = 'https://github.com/HansGam';\r\n                            return null;\r\n                        }}/>\r\n                        <Route path='/contact' component={() => {\r\n                            window.location.href = 'mailto:hdgamboa@gmail.com';\r\n                            return null;\r\n                        }}/>\r\n                        <Route path='/resume' component={() => {\r\n                            window.location.href = 'https://HansGam.github.io/HansGamboaResume.pdf';\r\n                            return null;\r\n                        }}/>\r\n                    </div>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}